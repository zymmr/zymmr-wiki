"use strict";(self.webpackChunkZymmr_Docs=self.webpackChunkZymmr_Docs||[]).push([[4263],{5059:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=r(5893),a=r(1151);const i={title:"Ordering Backlog Tasks and Lexorank Algorithm in Zymmr",sidebar_label:"Task Ordering and Lexorank"},t=void 0,o={id:"Customizing Zymmr/backlog-order",title:"Ordering Backlog Tasks and Lexorank Algorithm in Zymmr",description:"Ordering Backlog Tasks",source:"@site/docs/Customizing Zymmr/07-backlog-order.md",sourceDirName:"Customizing Zymmr",slug:"/Customizing Zymmr/backlog-order",permalink:"/wiki/docs/Customizing Zymmr/backlog-order",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Ordering Backlog Tasks and Lexorank Algorithm in Zymmr",sidebar_label:"Task Ordering and Lexorank"},sidebar:"tutorialSidebar",previous:{title:"Managing Project Backlog",permalink:"/wiki/docs/Customizing Zymmr/backlog-manage"},next:{title:"Setup Custom Fields",permalink:"/wiki/docs/Zymmr Administration/setup_cf"}},d={},l=[{value:"Ordering Backlog Tasks",id:"ordering-backlog-tasks",level:2},{value:"Lexorank Algorithm",id:"lexorank-algorithm",level:2},{value:"Lexorank Basics",id:"lexorank-basics",level:3},{value:"Maintaining Order",id:"maintaining-order",level:3},{value:"Rank Adjustment",id:"rank-adjustment",level:3},{value:"Consistency",id:"consistency",level:3},{value:"Example Use Case",id:"example-use-case",level:2},{value:"Scenario",id:"scenario",level:3},{value:"Steps",id:"steps",level:3}];function c(e){const n={h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"ordering-backlog-tasks",children:"Ordering Backlog Tasks"}),"\n",(0,s.jsx)(n.p,{children:"In Zymmr, users can organize and prioritize backlog tasks by manually moving them up or down. This feature allows project managers and team members to order tasks based on their priority and size, ensuring that the most important tasks are addressed first."}),"\n",(0,s.jsx)(n.h2,{id:"lexorank-algorithm",children:"Lexorank Algorithm"}),"\n",(0,s.jsx)(n.p,{children:"To maintain the order of tasks set by users, Zymmr employs the Lexorank algorithm. This algorithm ensures that the assigned order remains consistent even as tasks are added, moved, or reordered. Here is a brief summary of how the Lexorank algorithm works:"}),"\n",(0,s.jsx)(n.h3,{id:"lexorank-basics",children:"Lexorank Basics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lexorank uses a string-based ranking system where each task is assigned a unique identifier (rank)."}),"\n",(0,s.jsx)(n.li,{children:"These ranks are ordered lexicographically, meaning they follow the same ordering rules as words in a dictionary."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"maintaining-order",children:"Maintaining Order"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"When a task is moved up or down in the list, Lexorank adjusts the ranks of the affected tasks to maintain the desired order."}),"\n",(0,s.jsx)(n.li,{children:"The algorithm inserts new ranks between existing ones, ensuring there is always space to accommodate changes without needing to reorder the entire list."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rank-adjustment",children:"Rank Adjustment"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"If two tasks need to switch places, Lexorank recalculates the ranks to position the moved task correctly and updates the surrounding tasks' ranks as necessary."}),"\n",(0,s.jsx)(n.li,{children:"This recalculation happens in a way that minimizes the number of changes required, maintaining efficiency."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"consistency",children:"Consistency"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Lexorank ensures that the order assigned by the user is preserved at all times, regardless of how many tasks are moved or added."}),"\n",(0,s.jsx)(n.li,{children:"This consistency helps project managers and team members rely on the visual order of tasks to represent their priorities accurately."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-use-case",children:"Example Use Case"}),"\n",(0,s.jsx)(n.h3,{id:"scenario",children:"Scenario"}),"\n",(0,s.jsx)(n.p,{children:"You are managing a project backlog with tasks of varying priorities and sizes. You need to ensure that high-priority tasks are addressed first and that the order remains consistent even as new tasks are added."}),"\n",(0,s.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Order Tasks:"})," Drag and drop tasks in the backlog to arrange them based on their priority and size."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Observe Lexorank:"})," Notice how the tasks' ranks are adjusted automatically to reflect the new order."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Add New Task:"})," Insert a new high-priority task into the backlog and move it to the top. Lexorank recalculates the ranks to accommodate the new task without disrupting the existing order."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reorder Tasks:"})," Move a medium-priority task up by two positions. Lexorank updates the ranks of the affected tasks, maintaining the overall order set by you."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"By using the Lexorank algorithm, Zymmr ensures that your task order is preserved and consistently reflects your prioritization, making backlog management more reliable and efficient."})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>t});var s=r(7294);const a={},i=s.createContext(a);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);